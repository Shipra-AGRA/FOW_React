npm install parcel@2.13.3
npm install react-router-dom@6.22.0 
-components 
1.header 
    -logo
    -nav-items,
2.body
    -search
    -restro-cards-container
        -restro-cards
            -name
            -rating
            -image
            -cuisine
            -delivery time 
3.footer
    -copyright
    -links

-config driven UI- when our website is driven by data i.e controlling the UI using data(config) and this config from backend.

-two types of export -> named export and default export

-whenever a state variable updates, react re-renders the component

-react uses reconciliation algorithm(also known as react fiber algo). it is the way of find the diff and updating the DOM.

-virtual DOM is the visual representation of actual DOM.

-separation of concerns or single responsibility principle where each service has its own job no one is interfering each other, this is known as microservice architecture and here each service can be written in different languages.
all the services are deployed on different ports and all these ports can be mapped to domain name. so for making call to different service, need to make call to different url's.
ex- 1234-/ 
    1000-/api
    2000-/sms

-loads->api call->render on UI
-loads->render UI->make api call->re-render UI  [always use this approach atleast we can see the skeleton]

-useEffect Hook is called after the UI renders. when the component will load, it will render the component and when this render cycle is finish it will call the callback function passed in useEffect.

-for debugging purpose go to inspect>sources>put a debugger.

-we cannot make call to swiggy's api due to CORS policy as swiggy blocked the localhost to make request to the api but we can do this by add a chrome extension "cors chrome extension".

-shimmer UI-> resembles the actual page UI until UI does not loads.

-rendering based on condition known as conditinal rendering.

-when state changes, react re-renders that whole component. ex-in case of header component react re-renders whole header component.

-We declare useState variables as constants, yet we can still update the state. This is because when we update the state, the component re-renders, creating a new variable with the updated value.

-react is faster bcz of react fibre, the new reconciliation algorithm that find out the diff b/w two virtual DOM's and updates the portion wherever required only.

-useEffect
    by deafult behaviour is to call on each render.
    if dependency array is not there the useEffect will call everytime when component renders. 
    if dependency array is empty then useEffect is called only on initial render(just once).
    if there are some dependencies then useEffect will be called everytime when the dependencies updates.

-useState is use to create local state variables inside functional component so it must be declared inside the component.

-npm i react-router-dom -> react router DOM library
configuration means information that will tell the browser router that what will happen on a specific path that we need to pass into our createBrowserRouter.
import createBrowserRouter and RouterProvider in App.js
createBrowserRouter will create the routing configuration.
RouterProvider will provide the routing configuration to our app
in case when we want to stick the header and change the body everytime we will use children routes.
Outlet is a component, whenver there is a change in the path, the outlet will be filled with the children according to the path on what page we are.

-should not use anchor tag for navigation bcz in that case the whole page get refreshed till we moved to a new route. use Link Component.
